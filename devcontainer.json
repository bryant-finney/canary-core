// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.204.0/containers/docker-existing-dockerfile
{
  "name": "Existing Dockerfile",
  "runArgs": ["--init"],

  // Sets the run context to one level up instead of the .devcontainer folder.
  "context": "..",

  // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
  "dockerFile": "../Dockerfile",

  // Set *default* container specific settings.json values on container create.
  "settings": {},

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-vscode.cpptools-extension-pack",
    "esbenp.prettier-vscode",
    "streetsidesoftware.code-spell-checker",
    "formulahendry.docker-extension-pack",
    "henriiik.docker-linter",
    "p1c2u.docker-compose",
    "mhutchie.git-graph",
    "donjayamanne.githistory",
    "gitlab.gitlab-workflow",
    "eamodio.gitlens",
    "ryu1kn.partial-diff",
    "hoovercj.vscode-power-mode",
    "mutantdino.resourcemonitor",
    "foxundermoon.shell-format",
    "yatki.vscode-surround",
    "timonwong.shellcheck",
    "dengsir.template-generator-vscode",
    "redhat.vscode-yaml",
    "ms-azuretools.vscode-docker",
    "coolchyni.beyond-debug",
    "christian-kohler.path-intellisense",
    "ms-python.vscode-pylance",
    "njpwerner.autodocstring"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Uncomment the next line to run commands after the container is created - for example installing curl.
  "postCreateCommand": "chmod +x .devcontainer/post-create-command.sh && . ./.devcontainer/post-create-command.sh",

  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

  // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    "src=${localEnv:HOME}/.credentials,dst=/home/vscode/.credentials,type=bind,readonly",
    "src=${localEnv:HOME}/.gitconfig,dst=/home/vscode/.gitconfig,type=bind,readonly",
    "src=${localEnv:HOME}/.git_template,dst=/home/vscode/.git_template,type=bind,readonly",
    "src=${localEnv:HOME}/.p10k.zsh,dst=/home/vscode/.p10k.zsh,type=bind,readonly",
    "src=${localEnv:HOME}/.ssh,dst=/home/vscode/.ssh,type=bind,readonly",
    "src=${localEnv:HOME}/.vim,dst=/home/vscode/.vim,type=bind,readonly",
    "src=${localEnv:HOME}/.vscode/templates,dst=/home/vscode/.vscode/templates,type=bind",
    "src=${localEnv:HOME}/.zprofile,dst=/home/vscode/.zprofile,type=bind,readonly",
    "src=${localEnv:HOME}/.zsh_aliases,dst=/home/vscode/.zsh_aliases,type=bind",
    "src=${localEnv:HOME}/.zshrc,dst=/home/vscode/.zshrc,type=bind,readonly",
    "src=${localEnv:HOME}/powerlevel10k,dst=/home/vscode/powerlevel10k,type=bind,readonly"
  ],

  // Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "root"
}
