"""Generated by Django 3.2.9 on 2021-11-13 02:51."""

# django packages
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    """Generate the initial migration."""

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BasicAPIClient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "credential_id",
                    models.CharField(
                        help_text="store the `{username}` portion of the `Authorization: Basic {username}:{password}` header",
                        max_length=256,
                        unique=True,
                    ),
                ),
                (
                    "credential_secret",
                    models.CharField(
                        help_text="store the `{username}` portion of the `Authorization: Basic {username}:{password}` header",
                        max_length=256,
                    ),
                ),
                (
                    "host",
                    models.URLField(
                        help_text="the scheme, hostname, and port of the API server"
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        help_text="the URL providing the property data",
                        max_length=256,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^/?[a-zA-Z0-9_.-]*(/[a-zA-Z0-9_.-]+)*\\Z"
                            )
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.JSONField(
                        default=dict,
                        help_text="store address information as JSON for use with the HouseCanary API",
                    ),
                ),
                (
                    "assessment_date",
                    models.DateField(
                        help_text="the date at which the property was assessed"
                    ),
                ),
                (
                    "sewage_type",
                    models.CharField(
                        choices=[
                            ("NO", "None"),
                            ("MU", "Municipal"),
                            ("ST", "Storm"),
                            ("SE", "Septic"),
                            ("YS", "Yes"),
                        ],
                        default="NO",
                        max_length=2,
                    ),
                ),
                (
                    "other_data",
                    models.JSONField(default=dict, verbose_name="Other Data"),
                ),
                (
                    "apiclient",
                    models.ForeignKey(
                        help_text="The API client provividing information for this property",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hc_api_connector.basicapiclient",
                    ),
                ),
                (
                    "owners",
                    models.ManyToManyField(
                        help_text="these users own the property or act on behalf of the property owner; they are authorized to access sensitive information about the property",
                        related_name="properties",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Properties",
            },
        ),
    ]
